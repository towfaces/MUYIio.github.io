<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VMware 安装 CentOS 8.1 完整教程 </title>
      <link href="/2020/03/05/vmware-an-zhuang-centos-8-1-wan-zheng-jiao-cheng/"/>
      <url>/2020/03/05/vmware-an-zhuang-centos-8-1-wan-zheng-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>我使用的<font color="red" size="3">VMware</font>版本：<font color="red" size="3">VMware 15 Pro</font></p><p>镜像：<font color="red" size="3">CentOS 8.1</font></p><p><strong>电脑配置需求：</strong></p><ul><li><font color="red" size="3">2 GB</font> 及以上的<font color="red" size="3">RAM</font>（官方推荐至少<font color="red" size="3">4G</font>）</li><li><font color="red" size="3">2 GHz </font>或以上的 <font color="red" size="3">CPU</font></li><li><font color="red" size="3">64 </font>位 <font color="red" size="3">x86</font> 架构</li><li><font color="red" size="3">20 GB </font>及以上硬盘空间</li></ul><p><strong>关于CentOS 8.1</strong></p><p><font color="red" size="3">CentOS 8</font>系列增加了许多新特性，<font color="red" size="3">CentOS 8.1</font>相当于它的第二个发行版本，我这里就不列出了，具体可以看官方文档：</p><p><a href="https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS8.1905#A.2BbpBO43gB-" target="_blank" rel="noopener">CentOS 官网文档手册</a></p><p><a href="https://www.cnblogs.com/RXDXB/p/11660287.html" target="_blank" rel="noopener">Centos8与Centos7区别参照redhat）</a></p><h1 id="一、准备过程"><a href="#一、准备过程" class="headerlink" title="一、准备过程"></a>一、准备过程</h1><p>目前比较流行的两款虚拟机软件 <font color="red" size="3">VMware</font> 、<font color="red" size="3">VirtualBox</font>，<font color="red" size="3">VirtualBox</font>安装<font color="red" size="3">CentOS 8</font>系列目前还有很多<font color="red" size="3">Bug</font>，推荐使用<font color="red" size="3">VMware</font>。</p><p>1.安装<font color="red" size="3">VMware</font></p><p>如果你还没有安装虚拟机，进入<a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html" title="VMware" target="_blank" rel="noopener">VMware官网</a>下载相应版本安装即可：</p><p><img src="01.png" alt></p><p>官网下载过程可能有点慢，这里安装过程我就不赘述了。</p><p>2.下载<font color="red" size="3">CentOS 8.1</font>镜像资源</p><p>进入<a href="http://mirrors.huaweicloud.com/centos/8.1.1911/isos/x86_64/CentOS-8.1.1911-x86_64-dvd1.iso" title="CentOS" target="_blank" rel="noopener">CentOS官网</a>下载<font color="red" size="3">CentOS 8.1</font>镜像，我这里给的是在华为云的，下载速度还是可以。</p><h1 id="二、创建虚拟机"><a href="#二、创建虚拟机" class="headerlink" title="二、创建虚拟机"></a>二、创建虚拟机</h1><p>1.打开<font color="red" size="3">VMware</font>，点击创建新的虚拟机：</p><p><img src="02.png" alt></p><p>2.点击自定义（高级）：</p><p><img src="03.png" alt></p><p>3.这一步直接默认就可以：</p><p><img src="04.png" alt></p><p>4.选择稍后安装操作系统：</p><p><img src="05.png" alt></p><p>5.选择<font color="red" size="3">Linux</font>，版本选择<font color="red" size="3">Linux 4 ×64位</font>，因为<font color="red" size="3">CentOS 8</font>系列基于<font color="red" size="3"> Linux</font> 内核<font color="red" size="3"> 4.18</font>：</p><p><img src="06.png" alt></p><p>6.虚拟机名称随便，安装位置看自己电脑配置吧，建议安装在<font color="red" size="3">D</font>盘：</p><p><img src="07.png" alt></p><p>7.处理器数量根据自己电脑来配置，反正不够后面可以更改，要安装图形界面的话可以填大一点，新手就这个配置也可以了：</p><p><img src="08.png" alt></p><p>8.内存大小根据自己电脑适当配置，我的电脑内存<font color="red" size="3">16G</font>，所以我给它分配<font color="red" size="3">4G</font>，要安装图形界面的话可以填大一点：</p><p><img src="09.png" alt></p><p>9.设置虚拟机网络连接模式（<font color="red" size="3">NAT</font>）：</p><p><img src="10.png" alt></p><p><strong>关于网络连接模式说明：</strong></p><ul><li><p>桥接：选择桥接模式的话虚拟机和宿主机在网络上就是平级的关系，相当于连接在同一交换机上。</p></li><li><p>NAT：NAT模式就是虚拟机要联网得先通过宿主机才能和外面进行通信。</p></li><li><p>仅主机：虚拟机与宿主机直接连起来</p></li></ul><p>10.选择<font color="red" size="3">I/O</font>控制器类型，然后下一步：</p><p><img src="11.png" alt></p><p>11.选择磁盘类型：</p><p><img src="12.png" alt></p><p>12.选择创建新虚拟磁盘，然后下一步：</p><p><img src="13.png" alt></p><p>13.根据自己的需要分配磁盘容量，勾选将虚拟磁盘拆分成多个文件（方便以后将虚拟机拷贝到设备），然后下一步：</p><p><img src="14.png" alt></p><p>14.根据自己需要指定磁盘文件存储位置，我放在D盘：</p><p><img src="15.png" alt></p><p>15.到这里虚拟机就创建完成了，可以点击自定义硬件更改配置，点击完成创建成功：</p><p><img src="16.png" alt></p><h1 id="三、安装CentOS-8-1"><a href="#三、安装CentOS-8-1" class="headerlink" title="三、安装CentOS 8.1"></a>三、安装CentOS 8.1</h1><p>1.点击编辑虚拟机设置：</p><p><img src="17.png" alt></p><p>2.选择<font color="red" size="3">CD/DVD</font>，勾选启动时连接，再选择使用ISO映像文件，找到下载好的系统镜像文件添加进去，最后确定：</p><p><img src="18.png" alt></p><p>3.开启此虚拟机：</p><p><img src="19.png" alt></p><p>4.开启虚拟机后会出现以下界面，鼠标点进黑窗口，使用键盘方向键选择第一项，安装<font color="red" size="3">CentOS 8</font>，回车，系统开始自动安装</p><p><img src="20.png" alt></p><p>5.安装完成后选择语言，根据自己情况选择，然后点击继续：</p><p><img src="21.png" alt></p><p>6.首先打开网络和主机名，给虚拟机连上网络：</p><p><img src="22.png" alt></p><p><strong>如果网络连接不上，多半是<font color="red" size="3">DHCP</font>问题，解决办法：</strong></p><p><a href="https://blog.csdn.net/suoyudong/article/details/83037670" target="_blank" rel="noopener">解决安装centos 过程中以太网连接不上网络，不能自动分配ip的问题</a> (By 索渝东)</p><p>7.点击时间和日期，设置系统时间并更改时区(打开网络时间)：</p><p><img src="23.png" alt></p><p>8.选择安装目的地：</p><p><img src="24.png" alt></p><p>9.选择自定义配置，点击完成：</p><p><img src="25.png" alt></p><p>10.添加磁盘分区</p><p><font color="red" size="3">Linux</font>的分区，并不像<font color="red" size="3">Windows</font>一样，分成<font color="red" size="3">C、D、E</font>等盘，介绍几个重要的分区：</p><ul><li>交换分区（swap）：交换分区和Windows的虚拟内存很像。现在内存也便宜，物理服务器的配置也高，以前的说法是一般为物理内存的2倍，现在一般情况下划分为4~8GB备用即可。我们虚拟机的内存是4GB，我们就划8GB吧。</li><li>启动分区（boot）：200MB足够了。</li><li>根分区（/）：剩余空间都给根分区吧。当然我们也可以单独划出/data分区，专门用来存储存数据，不过这里我们先不这样做，直接全部都给根分区。</li></ul><p>按照下图顺序依次进行设置：</p><p><img src="26.png" alt></p><p><img src="27.png" alt></p><p>11.点击完成后会弹出更改摘要页面，点击接受更改：</p><p><img src="28.png" alt></p><p>12.点击开始安装：</p><p><img src="29.png" alt></p><p>13.设置<font color="red" size="3">ROOT</font>密码：</p><p><img src="30.png" alt></p><p>14.点击创建用户，可以把用户设为管理员方便操作，如果密码简单就点击两次完成：</p><p><img src="31.png" alt></p><p>15.安装完成后点击重启电脑：</p><p><img src="32.png" alt></p><p>16.重启完成后点击<font color="red" size="3">LICENS INFORMATION</font>,勾选同意许可，然后点击完成：</p><p><img src="33.png" alt></p><p><img src="34.png" alt></p><p>17.点击结束配置：</p><p><img src="35.png" alt></p><p>18.来到登录界面，点击未列出，以<font color="red" size="3">root</font>登录，方便后面配置操作：</p><p><img src="36.png" alt></p><p><img src="37.png" alt></p><p><img src="38.png" alt></p><p>19.选择语言：</p><p><img src="39.png" alt></p><p>选择键盘布局：</p><p><img src="40.png" alt></p><p>是否打开位置服务：</p><p><img src="41.png" alt></p><p>然后按照需要添加账号，然后就可以进入啦：</p><p><img src="42.png" alt></p><p>20.关闭系统使用帮助后，来到我们的<font color="red" size="3">centos8.1</font>桌面，点击活动可以看到系统软件，第一个是内置浏览器，点击最下面可以看到系统所有软件：</p><p><img src="43.png" alt></p><p>21。点击右上角折叠按钮可以连接网络，打开浏览器就可以访问啦，如果不能联网，在上面已经给出解决办法：</p><p><img src="44.png" alt></p><p><img src="45.png" alt></p><p>22.右上角有关机按钮，点击就可以关机：</p><p><img src="46.png" alt></p><p>到这里，我们的<font color="red" size="3">CentOS 8 Linux</font> 就算安装完成了，其他<font color="red" size="3">CentOS 8 </font>系列发行版本安装过程类似，可作参考。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 Github 和 Coding 为 Hexo 博客开启 Https</title>
      <link href="/2020/02/24/li-yong-github-he-coding-wei-hexo-bo-ke-kai-qi-https/"/>
      <url>/2020/02/24/li-yong-github-he-coding-wei-hexo-bo-ke-kai-qi-https/</url>
      
        <content type="html"><![CDATA[<p>本文记录使用<font color="red" size="3">Github</font>和<font color="red" size="3">Coding</font>官方支持为我们的<font color="red" size="3">Hexo</font>博客开启<font color="red" size="3">Https</font></p><blockquote><p>HTTPS （全称：Hyper Text Transfer Protocol over SecureSocket Layer），是以安全为目标的 HTTP 通道，在HTTP的基础上通过传输加密和身份认证保证了传输过程的安全性 [1]  。HTTPS 在HTTP 的基础下加入SSL 层，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。 HTTPS 存在不同于 HTTP 的默认端口及一个加密/身份验证层（在 HTTP与 TCP 之间）。</p></blockquote><h1 id="使用GitHub开启Https"><a href="#使用GitHub开启Https" class="headerlink" title="使用GitHub开启Https"></a>使用GitHub开启Https</h1><p>目前利用<font color="red" size="3">GitHub Pages</font>的网站都可以开启<font color="red" size="3">Https</font>，不论是自定义域名还是官方的二级域名。</p><p>首先来到我们的域名解析：</p><p>如果你域名的记录类型是 <font color="red" size="3">CNAME</font> 方式，那么就不需要做任何更改；</p><p>域名的记录类型是<font color="red" size="3"> A </font>方式，那么就需要把记录值指向以下<font color="red" size="3">IP</font>地址：</p><ul><li>185.199.108.153</li><li>185.199.109.153</li><li>185.199.110.153</li><li>185.199.111.153</li></ul><p>我的解析是在腾讯云，<font color="red" size="3">A</font>记录只能添加四个，<font color="red" size="3">GitHub</font>和<font color="red" size="3">Coding</font>就只能分配2个，所以上面的<font color="red" size="3">IP</font>我只解析了一个，不过阿里云好像可以解析多个，自己看着办。</p><p>可以参考一下我的：</p><p><img src="01.png" alt></p><p>域名解析好了之后打开<font color="red" size="3">GitHub</font>仓库，点击【<font color="red" size="3">Settings</font>】：</p><p><img src="02.png" alt></p><p>勾选【<font color="red" size="3">Enforce HTTPS</font>】，注意：如果此时你不能勾选，请删除【<font color="red" size="3">Custom domain</font>】里面你的域名并点击【<font color="red" size="3">Save</font>】保存，刷新网页后就可以勾选了</p><h1 id="使用Coding开启Https"><a href="#使用Coding开启Https" class="headerlink" title="使用Coding开启Https"></a>使用Coding开启Https</h1><p><strong>如果你的博客还没有托管到<font color="red" size="3">Coding</font>，可以参照我另外一篇文章：</strong><br><a href="https://muyiio.com/2020/02/20/hexo-shuang-xian-bu-shu-dao-coding-pages-he-github-pages-ti-sheng-fang-wen-su-du-bing-shi-xian-quan-zhan-https/" title="赵晓龙的博客">Hexo 双线部署到 Coding Pages 和 GitHub Pages 提升访问速度</a></p><p>进入我们的<font color="red" size="3">Coding</font>项目，点击【<font color="red" size="3">构建与部署</font>】-【<font color="red" size="3">静态网站</font>】，再点击右上角的设置，下拉到底部勾选【<font color="red" size="3">强制 HTTPS</font>】。</p><p><img src="03.png" alt></p><p><strong>这里说明一下：</strong></p><p><font color="red" size="3">Coding</font>绑定域名后<font color="red" size="3">SSL</font>证书申请失败，去域名解析把<font color="red" size="3">GitHub</font>解析暂停就可以申请成功了。</p><p>参照：<a href="https://blog.csdn.net/qq_41793001/article/details/102995817?utm_source=app" target="_blank" rel="noopener">hexo双线部署coding+github pages，实现https并开启又拍云CDN全站加速</a></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-个人博客之博客实用功能添加</title>
      <link href="/2020/02/24/hexo-ge-ren-bo-ke-zhi-bo-ke-shi-yong-gong-neng-tian-jia/"/>
      <url>/2020/02/24/hexo-ge-ren-bo-ke-zhi-bo-ke-shi-yong-gong-neng-tian-jia/</url>
      
        <content type="html"><![CDATA[<h1 id="添加Gittalk评论插件"><a href="#添加Gittalk评论插件" class="headerlink" title="添加Gittalk评论插件"></a>添加Gittalk评论插件</h1>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
            <tag> 博客优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-个人之博客主题美化</title>
      <link href="/2020/02/23/hexo-ge-ren-bo-ke-zhi-bo-ke-zhu-ti-mei-hua/"/>
      <url>/2020/02/23/hexo-ge-ren-bo-ke-zhi-bo-ke-zhu-ti-mei-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="添加雪花飘落特效"><a href="#添加雪花飘落特效" class="headerlink" title="添加雪花飘落特效"></a>添加雪花飘落特效</h1>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 双线部署到 Coding Pages 和 GitHub Pages 提升访问速度</title>
      <link href="/2020/02/20/hexo-shuang-xian-bu-shu-dao-coding-pages-he-github-pages-ti-sheng-fang-wen-su-du/"/>
      <url>/2020/02/20/hexo-shuang-xian-bu-shu-dao-coding-pages-he-github-pages-ti-sheng-fang-wen-su-du/</url>
      
        <content type="html"><![CDATA[<p><font color="magenta" size="4"><strong>在操作过程中遇到问题欢迎来骚扰我哈！<font color="red" size="4"> V：godxiaolong，QQ:1571504536</font></strong></font></p><p><img src="001.png" alt></p><p>相信不少朋友用<font color="red" size="3">Hexo+Github</font>搭建博客后，会发现网站的访问速度简直是龟速。为了摆脱<font color="red" size="3">GitHub</font>的龟速暴击，我们选择把博客托管到<font color="red" size="3">Coding</font>来提升访问速度。</p><p>至于什么是<font color="red" size="3">Coding</font>：</p><blockquote><p>Coding WebIDE 是 Coding 自主研发的在线集成开发环境 (IDE)。用户可以通过 WebIDE 创建项目的工作空间, 进行在线开发, 调试等操作。同时 WebIDE 集成了 Git 代码版本控制, 用户可以选择 Coding、GitHub、BitBucket、Git@OSC 等任意的代码仓库。 WebIDE 还提供了分享开发环境的功能, 用户可以保存当前的开发环境, 分享给团队的其他成员。大家可以理解为中国版的github，如果把代码既托管到coding上，又托管到github上，让大陆的用户访问的是由coding托管的网站，歪果仁访问的是由github托管的网站，以此来提升我们网站的访问速度。</p></blockquote><p>部署到<font color="red" size="3"> Coding Pages </font>的好处：国内访问速度更快，可以提交百度收录（<font color="red" size="3">GitHub </font>禁止了百度的爬取）</p><p><strong>部署过程中我所遇到的两个问题：</strong></p><ul><li><p>使用密钥连接<font color="red" size="3">Coding</font>时出现权限不足的情况；</p></li><li><p>无法无法实现全站 <font color="red" size="3">HTTPS</font>。</p><p>这两个问题我会在文中给出解决办法。</p></li></ul><p>进行下面操作的前提是你已经将自己的博客推送到<font color="red" size="3">GitHub</font>（拥有自己的博客），如果没有，可以参考我之前的文章<a href="https://muyiio.com/2020/02/18/github-hexo-bo-ke-da-jian-chao-xiang-xi-jiao-cheng/" title="Github + Hexo 博客搭建超详细教程">《Github + Hexo 博客搭建超详细教程》</a></p><h2 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h2><ul><li>1.创建项目</li><li>2.配置 <font color="red" size="3">_config.yml</font></li><li>3.将代码推送到<font color="red" size="3">Coding</font></li><li>4.开启<font color="red" size="3"> Coding Pages</font></li><li>5.绑定域名并开启<font color="red" size="3"> Https</font></li></ul><hr><h1 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1.创建项目"></a>1.创建项目</h1><p><a href="https://dev.tencent.com/production" title="Coding" target="_blank" rel="noopener">点击此处</a>进入<font color="red" size="3">Coding</font>个人版官网注册账号，由于 <font color="red" size="3">Coding</font> 已经被腾讯收购了，所以登录就会来到<a href="https://cloud.tencent.com/?fromSource=gwzcw.2212127.2212127.2212127&utm_medium=cpd&utm_id=gwzcw.2212127.2212127.2212127" target="_blank" rel="noopener">腾讯云</a>开发者平台：</p><p><img src="01.png" alt></p><p>找到创建项目：</p><p><img src="02.png" alt></p><p>项目名称建议和你的用户名一致，到时候可以直接通过 <font color="red" size="3">user_name.coding.me </font>访问你的博客，如果项目名与用户名不一致，则需要通过<font color="red" size="3"> user_name.coding.me/project_name </font>才能访问，项目描述随便写：</p><p><img src="03.png" alt></p><h1 id="2-配置-config-yml"><a href="#2-配置-config-yml" class="headerlink" title="2.配置 _config.yml"></a>2.配置 _config.yml</h1><p>进入我们的项目，在右上角选择连接方式，这里我以<font color="red" size="3">HTTPS</font>连接为例，将链接复制下来：</p><p><img src="04.png" alt></p><p>然后打开你本地博客根目录的<font color="red" size="3"> _config.yml </font>文件，找到<font color="red" size="3"> deploy </font>关键字，添加 我们刚才复制的<font color="red" size="3"> coding </font>地址：</p><p><img src="05.png" alt></p><p><strong>注意：</strong></p><ul><li>1.如果要<font color="red" size="3">同时</font>推送到<font color="red" size="3">GitHub</font>和<font color="red" size="3">Coding</font>，<font color="red" size="3">type</font>前面加<font color="red" size="3"> -</font>。</li><li>2.每一行<font color="red" size="3">冒号后面的空格</font>不要忘记。</li></ul><p><strong>我这里不选择SSH连接Coding的原因</strong>：</p><ul><li>1.我的<font color="red" size="3">SSH</font>连接<font color="red" size="3">GitHub</font>没有问题，但是连接<font color="red" size="3">Coding</font>就显示没有权限。</li><li>2.找了很多教程，逐个尝试也没有找到原因。</li></ul><p><img src="06.png" alt></p><p><strong>如果有大佬解出，欢迎给我指点！</strong></p><p>还是要用SSH连接的小伙伴我给出这篇参考资料：</p><p><a href="https://blog.csdn.net/ivan_zcy/article/details/82927483" title="hexo加快访问速度" target="_blank" rel="noopener">hexo加快访问速度</a> (By ivan_zcy)</p><h1 id="3-将代码推送到Coding"><a href="#3-将代码推送到Coding" class="headerlink" title="3.将代码推送到Coding"></a>3.将代码推送到Coding</h1><p>现在我们在博客根目录下右键单击<font color="red" size="3">Git Bash Here</font>，输入下面三个命令：</p><pre><code>hexo clean hexo ghexo d</code></pre><p><img src="07.png" alt></p><p>使用<font color="red" size="3">HTTPS</font>的缺点就是在推送时会要求我们输入<font color="red" size="3">Coding</font>的用户名和密码，如果第一次输入错误了，可以参考这篇资料：</p><p><a href="https://blog.csdn.net/qq_38948398/article/details/89953365?utm_source=app" title="git本地第一次推送密码填写错误处理方式" target="_blank" rel="noopener">git本地第一次推送密码填写错误处理方式</a> (By 颜墨白)</p><h1 id="4-开启-Coding-Pages"><a href="#4-开启-Coding-Pages" class="headerlink" title="4.开启 Coding Pages"></a>4.开启 Coding Pages</h1><p>进入你的项目，在构建与部署一栏选择静态网站，这里需要实名认证：</p><p><img src="08.png" alt></p><p>选择我们的代码库：</p><p><img src="09.png" alt></p><p>这个时候就可以看到我们的网站地址啦：</p><p><img src="10.png" alt></p><h1 id="5-绑定域名并开启-Https"><a href="#5-绑定域名并开启-Https" class="headerlink" title="5.绑定域名并开启 Https"></a>5.绑定域名并开启 Https</h1><p>在静态网站一栏右上角点击设置，下滑到底绑定我们的域名（注意：<font color="red" size="3"><a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a> </font>开头）：</p><p><img src="11.png" alt></p><p>然后打开我们的域名解析，我在之前的文章中详细介绍了关于域名解析<a href="https://muyiio.com/2020/02/18/github-hexo-bo-ke-da-jian-chao-xiang-xi-jiao-cheng/" title="Github + Hexo 博客搭建超详细教程">《Github + Hexo 博客搭建超详细教程》</a>，两种方法：</p><ul><li>1.在域名<font color="red" size="3"> DNS </font>设置中添加一条<font color="red" size="3"> CNAME </font>记录指向 <font color="red" size="3">xxxx.coding.me</font>，解析路线选择默认。</li><li>2.在域名<font color="red" size="3"> DNS </font>设置中添加一条<font color="red" size="3">A</font>记录，记录指向<font color="red" size="3"> xxxx.coding.me</font>的<font color="red" size="3">ip</font>，解析路线选择默认。（<font color="red" size="3">ip地址获取：WIN+R输入cmd进入终端，输入：ping xxxx.coding.me 即可。</font>）</li></ul><p>将 <font color="red" size="3">GitHub</font> 的解析路线改为 境外，这样境外访问就会走<font color="red" size="3"> GitHub</font>，境内就会走<font color="red" size="3"> Coding</font>，也有人说阿里云是智能解析，自动分配路线，如果解析路线都是默认，境外访问同样会智能选择走<font color="red" size="3"> GitHub</font>，境内走 <font color="red" size="3">Coding</font>。</p><p>我的解析：</p><p><img src="12.png" alt></p><p><strong><font color="red" size="3">SSL</font>证书申请失败解决方法：</strong></p><ul><li>先去域名 <font color="red" size="3">DNS</font> 把 G<font color="red" size="3">itHub</font> 的解析暂停掉，然后再重新申请 <font color="red" size="3">SSL</font> 证书，大约十秒左右就能申请成功，然后开启强制 <font color="red" size="3">HTTPS 访问</font></li></ul><p><strong>开启<font color="red" size="3">HTTPS</font>,如图，勾选即可：</strong><br><img src="13.png" alt></p><p>文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Coding </tag>
            
            <tag> HTTPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo 搭建个人博客超详细教程</title>
      <link href="/2020/02/18/github-hexo-da-jian-ge-ren-bo-ke-chao-xiang-xi-jiao-cheng/"/>
      <url>/2020/02/18/github-hexo-da-jian-ge-ren-bo-ke-chao-xiang-xi-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p><img src="01.png" alt></p><p><font color="magenta" size="4"><strong>在搭建过程中遇到问题欢迎来骚扰我哈！<font color="red" size="4"> V：godxiaolong，QQ:1571504536</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~</strong></font></p><p><img src="02.png" alt></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><p>作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！</p></li><li><p>搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。</p></li><li><p><strong>为什么要搭建自己的博客？可以看看这三篇文章：</strong></p></li></ul><p><a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" title="为什么你应该（从现在开始就）写博客" target="_blank" rel="noopener">《为什么你应该（从现在开始就）写博客》</a>   (By 刘未鹏 | Mind Hacks)</p><p><a href="https://www.zhihu.com/question/19916345" title="为什么要自建博客？" target="_blank" rel="noopener">《为什么要自建博客？》</a>   (By 知乎)</p><p><a href="https://www.cnblogs.com/jhzhu/p/3893297.html" title="我为什么写博客" target="_blank" rel="noopener">《我为什么写博客》</a> （By 知明所以）</p><p>我们需要知道搭建博客要用到的框架。<font color="red" size="3">Hexo</font>是高效的静态站点生成框架，它基于<font color="red" size="3">Node.js</font>。我们使用<font color="red" size="3">MarkDown</font>在本地编辑我们的博客文章，通过<font color="red" size="3">Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。</p><h2 id="本文目录"><a href="#本文目录" class="headerlink" title="本文目录"></a>本文目录</h2><ul><li><strong>快速搭建</strong></li><li>安装<font color="red" size="3">Node.js</font></li><li>添加国内镜像</li><li>安装<font color="red" size="3">Git </font></li><li>注册<font color="red" size="3">Github</font>账号</li><li>创建<font color="red" size="3">Git</font>仓库</li><li>安装<font color="red" size="3">Hexo</font> </li><li>配置本地<font color="red" size="3">Hexo</font></li><li>连接<font color="red" size="3">Github</font>与本地 </li><li>写文章、发布文章 </li><li><font color="red" size="3">MarkDown</font>文章编辑器说明</li><li>配置个性化域名</li><li>更换自己喜欢的<font color="red" size="3">Hexo</font>主题</li><li>我的博客源代码</li><li>结语</li></ul><hr><h1 id="快速搭建"><a href="#快速搭建" class="headerlink" title="快速搭建"></a>快速搭建</h1><p>有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。</p><p>在这里以我的博客为例。</p><h2 id="一、下载博客源代码"><a href="#一、下载博客源代码" class="headerlink" title="一、下载博客源代码"></a>一、下载博客源代码</h2><p>大家可以直接素质二连，<font color="red" size="3">Star&amp;Fork</font>我的博客源代码：<a href="https://github.com/MUYIio/Hexo-matery-Themes" target="_blank" rel="noopener">https://github.com/MUYIio/Hexo-matery-Themes</a>，这里我给出两种下载方法：</p><p><img src="03.png" alt></p><p><strong>第一种</strong>：直接<font color="red" size="3">DownLoad</font>，下载到本地就可以。</p><p><strong>第二种</strong>：如果你已经安装了<a href="https://git-scm.com/download/win" title="Git" target="_blank" rel="noopener">Git</a>，就可以右键单击<font color="red" size="3">Come Bash Here</font>运行<font color="red" size="3"><a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:MUYIio/Hexo-matery-Themes.git</font>将所有文件下载到本地，这个复杂一点。</p><h2 id="二、修改博客文档配置"><a href="#二、修改博客文档配置" class="headerlink" title="二、修改博客文档配置"></a>二、修改博客文档配置</h2><p>首先将我们下载的博客源代码解压，然后修改主要配置：</p><ul><li>根目录配置文件<font color="red" size="3">_config.yml</font>和主题目录配置文件<font color="red" size="3">_config.yml</font>中修改个人信息。</li><li>根目录配置文件中修改<font color="red" size="3">deploy</font>一栏的<font color="red" size="3">repository</font>。</li><li>根目录配置文件中修改<font color="red" size="3">baidu_url_submit</font>一栏的<font color="red" size="3">token</font>。</li><li>主题配置文件中修改<font color="red" size="3">gitalk</font>一栏，修改方法见正文。</li></ul><p>我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。</p><p>最后一步，<strong>本地的运行环境还是需要搭建好的</strong>，跟着下文操作到连接Github与本地，环境就算是搭建完成。</p><p><strong>本地环境搭建好之后会生成的文件：</strong></p><p><img src="35.png" alt></p><p>然后直接把<font color="red" size="3">Hexo</font>文件夹删掉，把我的源代码的<font color="red" size="3">Hexo</font>文件夹移动过来：</p><p><img src="36.png" alt></p><p>就是这样了：</p><p><img src="37.png" alt></p><p>然后在<font color="red" size="3">Hexo</font>文件夹下右键单击鼠标，点击 <font color="red" size="3">Git Bash Here</font>点击输入以下命令上传就可以了：</p><pre><code>hexo cleanhexo ghexo d</code></pre><h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><p>了解一下什么是<font color="red" size="3">Node.js</font>：</p><blockquote><p><font color="red" size="3">Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。</p></blockquote><p>需要用到的命令：</p><pre><code>$ git --version$ node -v$ npm -v</code></pre><p><a href="https://nodejs.org/en/download/" title="Node.js" target="_blank" rel="noopener">点击此处</a>进入<font color="red" size="3">Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color="red" size="3">Next</font>。</p><p><img src="04.png" alt></p><p>检验是否安装成功：<br>按<font color="red" size="3">Win+R</font>打开命令提示符，输入<font color="red" size="3">node -v</font>和<font color="red" size="3">npm -v</font>，如果出现版本号，那么就安装成功了。</p><p><img src="05.png" alt></p><h1 id="添加国内镜像"><a href="#添加国内镜像" class="headerlink" title="添加国内镜像"></a>添加国内镜像</h1><p>这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：</p><pre><code>npm config set registry https://registry.npm.taobao.org</code></pre><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><blockquote><p><font color="red" size="3">Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color="red" size="3">Github</font>。</p></blockquote><p><a href="https://git-scm.com/download/win" title="Git" target="_blank" rel="noopener">点击此处</a>进入Git官网下载相应版本，默认安装即可。</p><p><img src="005.png" alt></p><p>参考资料：<a href="https://www.cnblogs.com/jytx/p/5602927.html" title="如何在windows下安装GIT" target="_blank" rel="noopener">《如何在windows下安装GIT》</a> (By 俊雨廷休)</p><p>检验是否安装成功：</p><p>安装完成后在命令提示符中输入<font color="red" size="3">git –version</font>验证是否安装成功</p><pre><code>git --version</code></pre><p><img src="06.png" alt></p><h1 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h1><p><font color="red" size="3">Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，<a href="https://github.com/" title="Github" target="_blank" rel="noopener">点击此处</a>进入<font color="red" size="3">Github</font>官网点击 <font color="red" size="3">Sign Up </font>注册账户。</p><h1 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h1><p>登录<font color="red" size="3">Github</font>创建一个仓库</p><p><img src="07.png" alt></p><p>如下图所示，<strong>输入自己的项目名字，后面一定要加<font color="red" size="3">.github.io</font>后缀，<font color="red" size="3">README</font>初始化也要勾上。名称一定要和你的<font color="red" size="3">Github</font>名字完全一样，比如你<font color="red" size="3">github</font>名字叫<font color="red" size="3">A</font>，那么仓库名字一定要是<font color="red" size="3">A.github.io</font>。</strong></p><p><img src="08.png" alt></p><p>选择一个自己喜欢的主题：<br>在上面创建的仓库里面点击<font color="red" size="3">Settings</font>（不是头像下面那个<font color="red" size="3">Settings</font>），向下拉到最后有个<font color="red" size="3">GitHub Pages</font>，点击<font color="red" size="3">Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color="red" size="3">GitHub Pages</font>，就可以预览效果啦。</p><p><img src="09.png" alt></p><p><img src="10.png" alt></p><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><blockquote><p><font color="red" size="3">Hexo</font>是一款基于<font color="red" size="3">Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color="red" size="3">GitHub</font>和<font color="red" size="3">Heroku</font>上，是搭建博客的首选框架。</p></blockquote><p>选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color="red" size="3">（C/panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color="red" size="3"> Git Bash Here</font>，输入以下<font color="red" size="3"> npm </font>命令即可安装</p><pre><code>$ npm install hexo-cli -g</code></pre><p><img src="11.png" alt></p><p>输入<font color="red" size="3">hexo -v</font>即可检验是否安装成功，我这里就不演示了。</p><h1 id="配置本地hexo"><a href="#配置本地hexo" class="headerlink" title="配置本地hexo"></a>配置本地hexo</h1><p>还是在刚才新建的文件夹下再新建一个<font color="red" size="3">Hexo</font>文件夹，比如我的<font color="red" size="3">（C/panakot Blog/Hexo）</font>，在<font color="red" size="3">Hexo</font>文件夹下右键单击鼠标，点击<font color="red" size="3"> Git Bash Here</font>，依次输入以下<font color="red" size="3"> npm </font>命令即可初始化。</p><pre><code>hexo initnpm install</code></pre><p><img src="12.png" alt></p><p>初始化成功生成的文件：</p><p><img src="13.png" alt></p><p>接着我们输入<font color="red" size="3">hexo g</font>生成静态网页，然后输入<font color="red" size="3">hexo s</font>打开本地服务器，然后浏览器打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，就可以预览我们的博客啦，如图：</p><p>显示以下信息说明操作正确：</p><p><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></p><p><img src="14.png" alt></p><p>按<font color="red" size="3">ctrl+c</font>关闭本地服务器。</p><p><strong>我们以后常用到的<font color="red" size="3">Hexo</font>命令：</strong></p><ul><li><p><font color="red" size="3">hexo s</font>等价于 <font color="red" size="3">hexo server</font>  #<font color="red" size="3">Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</p></li><li><p><font color="red" size="3">hexo g</font> 等价于 <font color="red" size="3">hexo generate</font>  #生成静态网页 (执行 $ <font color="red" size="3">hexo g</font>后会在站点根目录下生成<font color="red" size="3">public</font>文件夹,<font color="red" size="3"> hexo</font>会将”<font color="red" size="3">/blog/source/</font>“ 下面的<font color="red" size="3">.md</font>后缀的文件编译为<font color="red" size="3">.html</font>后缀的文件,存放在”<font color="red" size="3">/blog/public/ </font>“ 路径下)</p></li><li><p><font color="red" size="3">hexo d </font>等价于 <font color="red" size="3">hexo deploy</font>  #将本地数据部署到远端服务器(如<font color="red" size="3">github</font>)</p></li><li><p><font color="red" size="3">hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color="red" size="3">public</font>文件夹</p></li></ul><h1 id="连接Github与本地"><a href="#连接Github与本地" class="headerlink" title="连接Github与本地"></a>连接Github与本地</h1><h2 id="一、生成密钥"><a href="#一、生成密钥" class="headerlink" title="一、生成密钥"></a>一、生成密钥</h2><p>右键单击鼠标，点击 <font color="red" size="3">Git Bash Here</font>输入以下命令：</p><pre><code>git config --global user.name &quot;Name&quot;git config --global user.email &quot;Email&quot;</code></pre><p><strong><font color="red" size="3">Name</font>和<font color="red" size="3">Email</font>是我们注册<font color="red" size="3">Github</font>时的用户名和邮箱。</strong></p><p>然后生成密钥：</p><pre><code>ssh-keygen -t rsa -C &quot;Email&quot;</code></pre><p><strong><font color="red" size="3">Email</font>是我们注册<font color="red" size="3">Github</font>时的邮箱</strong></p><p>然后会出现：</p><pre><code>Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/you/.ssh/id_rsa)://到这里可以直接回车将密钥按默认文件进行存储</code></pre><p>回车之后：</p><pre><code>Enter passphrase (empty for no passphrase)://这里是要你输入密码，其实不需要输什么密码，直接回车就行Enter same passphrase again:</code></pre><p>接下来会有：</p><pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.The key fingerprint is:这里是各种字母数字组成的字符串，结尾是你的邮箱The key&#39;s randomart image is:这里也是各种字母数字符号组成的字符串</code></pre><p>现在密钥已经生成，一般存放在<font color="red" size="3">（/c/Users/you/.ssh/id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：</p><pre><code> clip &lt; ~/.ssh/id_rsa.pub</code></pre><p><img src="15.png" alt></p><h2 id="二、连接Github"><a href="#二、连接Github" class="headerlink" title="二、连接Github"></a>二、连接Github</h2><p>在<font color="red" size="3">Github</font>头像下面点击<font color="red" size="3">Settings</font>，再点击<font color="red" size="3">SSH and GPG keys</font>，新建一个<font color="red" size="3">SSH</font>，名字任意。</p><p><img src="16.png" alt></p><p><img src="17.png" alt></p><p>然后将刚才复制的密钥添加就可以了，像这样：</p><p><img src="18.png" alt></p><p><strong>本地连接Github</strong></p><p>右键单击鼠标，点击<font color="red" size="3"> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了</p><pre><code>ssh -T git@github.com//注意不要做任何修改</code></pre><p><img src="19.png" alt></p><p>用记事本打开博客根目录下的<font color="red" size="3">_config.yml</font>文件，这是博客的配置文件，我们需要修改一下才能连接<font color="red" size="3">Github</font>。</p><p><img src="20.png" alt></p><p>修改最后一行的配置：</p><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type:</code></pre><p>改为：</p><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repository: git@github.com:panakot/panakot.github.io.git  branch: master</code></pre><p><img src="21.png" alt></p><p>切记：</p><ul><li><strong><font color="red" size="3">repository</font>修改为你自己的<font color="red" size="3">github</font>项目地址</strong>。</li><li><strong>每一个冒号后面都有一个空格。</strong></li></ul><h1 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开<font color="red" size="3">Git Bash Here</font>输入以下命令，安装一个扩展.</p><pre><code>npm i hexo-deployer-git</code></pre><p>然后输入下面的命令，新建一篇文章。</p><pre><code>hexo new post &quot;article title&quot;</code></pre><p><img src="22.png" alt></p><p>然后打开<font color="red" size="3">C:\panakot Blog\Hexo\source_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color="red" size="3">.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p><p><img src="23.png" alt></p><p>编写完<font color="red" size="3">markdown</font>文件后，根目录下右键打开<font color="red" size="3">Git Bash Here</font>输入<font color="red" size="3">hexo g</font>生成静态网页，然后输入<font color="red" size="3">hexo s</font>可以本地预览效果，最后输入<font color="red" size="3">hexo d</font>上传到<font color="red" size="3">github</font>上。</p><p>你的博客地址：<font color="red" size="3">https://你的用户名.github.io</font>，比如我的是：<a href="https://muyiio.github.io" target="_blank" rel="noopener">https://muyiio.github.io</a>，现在每个人都可以通过此链接访问你的博客</p><h1 id="MarkDown文章编辑器说明"><a href="#MarkDown文章编辑器说明" class="headerlink" title="MarkDown文章编辑器说明"></a>MarkDown文章编辑器说明</h1><blockquote><p>前面我们提到了使用<font color="red" size="3">MarkDown</font>编辑我们的博客文章。<font color="red" size="3"> Markdown</font> 是<font color="red" size="3"> 2004</font> 年由 <font color="red" size="3">John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color="red" size="3"> .md </font>文件可以使用支持 <font color="red" size="3">Markdown </font>语法的编辑器编辑，然后将写好的文章<font color="red" size="3">（.md文件）</font>保存到<font color="red" size="3"> \Hexo\source_posts </font>文件夹下即可。</p></blockquote><p> <font color="red" size="3">Windows </font>上推荐使用 <font color="red" size="3">MarkdownPad2 </font>或者<font color="red" size="3">小书匠</font>编辑器，<font color="red" size="3">macOS </font>上使用<font color="red" size="3"> Mou</font> 编辑器，<font color="red" size="3">Linux </font>上使用 <font color="red" size="3">Remarkable</font> 编辑器，<font color="red" size="3">Web </font>端上使用 简书。</p><p><strong><a href="http://markdownpad.com/download.html" title="MarkDown" target="_blank" rel="noopener">点击此处</a>下载<font color="red" size="3">MarkDown</font><br>，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：</strong></p><p><a href="https://www.jianshu.com/p/q81RER/" title="献给写作者的 Markdown 新手指南" target="_blank" rel="noopener">《献给写作者的 Markdown 新手指南》</a> （By 简书）</p><p><a href="https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app" title="Markdown语法图文全面详解" target="_blank" rel="noopener">《Markdown语法图文全面详解(10分钟学会)》</a>（By 黑暗星球）</p><p><a href="https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app" title="Markdown 语法手册 （完整整理版）" target="_blank" rel="noopener">《Markdown 语法手册 （完整整理版）》</a> （By witnessai1）</p><p><a href="https://sspai.com/post/25137" title="认识与入门 Markdown" target="_blank" rel="noopener">《认识与入门 Markdown》</a>（By Te_Lee）</p><p>写完文章记得在博客根目录<font color="red" size="3">Bash Here</font>输入<font color="red" size="3">hexo g</font>和<font color="red" size="3">hexo d</font>上传到网站。</p><h1 id="配置个性化域名"><a href="#配置个性化域名" class="headerlink" title="配置个性化域名"></a>配置个性化域名</h1><p>一顿操作下来，打开我们的博客还是：<font color="red" size="3"><a href="http://www.xxx.github.io" target="_blank" rel="noopener">www.xxx.github.io</a></font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color="red" size="3"><a href="http://www.xxx.com" target="_blank" rel="noopener">www.xxx.com</a> </font>。</p><p><a href="https://www.aliyun.com/" title="阿里云" target="_blank" rel="noopener">阿里云</a>和<a href="https://cloud.tencent.com/" title="腾讯云" target="_blank" rel="noopener">腾讯云</a>都可以，我的是腾讯云，购买域名后首先需要添加解析：</p><p><img src="24.png" alt></p><p><img src="25.png" alt></p><p><strong>方法一：</strong>点击添加记录，需要添加两个记录，两个记录类型都是 <font color="red" size="3">CNAME </font>，第一个主机记录为<font color="red" size="3"> @ </font>，第二个主机记录为<font color="red" size="3"> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color="red" size="3">muyiio.github.io</font>），保存之后域名解析就完成了！</p><p><img src="27.png" alt></p><p><strong>方法二：</strong>两个记录类型为<font color="red" size="3"> A </font>，第一个主机记录为<font color="red" size="3"> @ </font>，第二个主机记录为<font color="red" size="3"> www</font>，记录值都为博客的<font color="red" size="3"> IP</font> 地址，<font color="red" size="3">IP </font>地址可以<font color="red" size="3"> cmd</font> 中输入<font color="red" size="3"> ping</font> 你的博客地址 获得（比如我的：<font color="red" size="3">ping muyiio.github.io</font>），保存之后域名解析就完成了！</p><p>参考资料：</p><p><a href="https://blog.csdn.net/it_man/article/details/9017307" title="域名解析中A记录、CNAME、MX记录、NS记录的区别和联系" target="_blank" rel="noopener">《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》</a></p><p><img src="26.png" alt></p><p><strong>不管在哪个平台购买域名，操作都大同小异，这里说明两点</strong>：</p><blockquote><p>如果你填写的是没有<font color="red" size="3">www</font>的，比如 <font color="red" size="3">muyio.com</font>，那么无论是访问<font color="red" size="3"> <a href="https://www.muyiio.com" target="_blank" rel="noopener">https://www.muyiio.com</a> </font>还是<font color="red" size="3"> <a href="https://muyiio.com">https://muyiio.com</a></font> ，都会自动跳转到<font color="red" size="3"> <a href="https://muyiio.com">https://muyiio.com</a></font>。</p></blockquote><blockquote><p>如果你填写的是带<font color="red" size="3">www</font>的，比如 <font color="red" size="3"><a href="http://www.muyiio.com" target="_blank" rel="noopener">www.muyiio.com</a> </font>，那么无论是访问 <font color="red" size="3"><a href="https://www.muyiio.com" target="_blank" rel="noopener">https://www.muyiio.com</a></font> 还是 <font color="red" size="3"><a href="https://muyiio.com">https://muyiio.com</a> </font>，都会自动跳转到 <font color="red" size="3"><a href="http://www.imuyiio.com" target="_blank" rel="noopener">http://www.imuyiio.com</a></font>。</p></blockquote><p>然后打开你的<font color="red" size="3">github</font>博客项目，点击settings，拉到下面<font color="red" size="3">Custom domain</font>处，填上你自己的域名，保存就可以了。</p><p><img src="28.png" alt></p><p>现在我们的项目根目录应该会出现一个名为<font color="red" size="3">CNAME</font>的文件了。如果没有的话，打开你本地博客<font color="red" size="3">/source</font>目录，我的是<font color="red" size="3">C:\Blog\Hexo\source</font>，新建<font color="red" size="3">CNAME</font>文件，<font color="red" size="3">（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color="red" size="3">hexo g、hexo d</font>上传到<font color="red" size="3">github</font>。</p><p><img src="29.png" alt></p><p>现在就可以通过我们的个性化域名：<font color="red" size="3"><a href="http://www.xxx.com、xxx.com" target="_blank" rel="noopener">www.xxx.com、xxx.com</a></font>访问自己的博客了。</p><h1 id="更换自己喜欢的Hexo主题"><a href="#更换自己喜欢的Hexo主题" class="headerlink" title="更换自己喜欢的Hexo主题"></a>更换自己喜欢的Hexo主题</h1><p>点击进入<a href="https://hexo.io/themes/" title="Hexo主题专栏" target="_blank" rel="noopener">Hexo主题专栏</a>可以看到很多<font color="red" size="3">Hexo</font>主题：</p><p><img src="30.png" alt></p><p>推荐：</p><p><a href="https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app" title="几个好用的hexo主题" target="_blank" rel="noopener">几个好用的hexo主题</a> (By fail_perfectly)</p><p>这里我们以<a href="http://huangxuan.me/" title="Bean Tech" target="_blank" rel="noopener">Bean Tech</a>主题为例，下滑到底部我们可以看到他的<font color="red" size="3">GitHub</font>（<font color="red" size="3">有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：</p><p><img src="31.png" alt></p><p>点击进入主题的<font color="red" size="3">GitHub</font>地址：</p><p><img src="32.png" alt></p><p>复制该项目地址：</p><p><img src="33.png" alt></p><p>然后打开<font color="red" size="3"> Hexo </font>文件夹下的<font color="red" size="3"> themes</font> 目录（如：<font color="red" size="3">C:\MUYIio Blog\Hexo\themes</font>），右键<font color="red" size="3"> Git Bash Here</font>，输入以下命令：</p><pre><code>$ git clone 此处填写你刚才复制的主题地址</code></pre><p>以我们刚才复制的为例：</p><pre><code>$ git clone https://github.com/Huxpro/huxpro.github.io</code></pre><p>下载完成后即可在<font color="red" size="3"> themes </font>目录下生成 <font color="red" size="3">hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color="red" size="3">Hexo</font> 文件夹下的配置文件 <font color="red" size="3">_config.yml </font>，找到关键字 <font color="red" size="3">theme</font>，修改参数为：<font color="red" size="3">theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），<strong>再次注意冒号后面有一个空格！</strong></p><p><img src="34.png" alt></p><p>现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color="red" size="3"> Git Bash Here</font>，输入以下命令：</p><pre><code>hexo cleanhexo ghexo d</code></pre><p>现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color="red" size="3">_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color="red" size="3">C:\MUYIio Blog\Hexo_config.yml</font>），主要包含<font color="red" size="3"> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color="red" size="3">C:\MUYIio Blog\Hexo\themes\hexo-theme-matery_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color="red" size="3"> _config.yml </font>文件里都有相关注释，按需修改即可。</p><h1 id="我的博客源代码"><a href="#我的博客源代码" class="headerlink" title="我的博客源代码"></a>我的博客源代码</h1><p><strong>我的博客源代码地址：<a href="https://github.com/MUYIio/Hexo-matery-Themes" target="_blank" rel="noopener">https://github.com/MUYIio/Hexo-matery-Themes</a>，有心的话可以给个<font color="red" size="3">Star&amp;Fork</font>。</strong></p><p>在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color="red" size="3">Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。</p><p>主题的原地址在这里：<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a>，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。</p><p>使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。</p><table><tr><td bgcolor="orange">-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            </td></tr></table><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。</p><p>文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019总结及2020规划</title>
      <link href="/2020/01/17/2019-zong-jie-ji-2020-gui-hua/"/>
      <url>/2020/01/17/2019-zong-jie-ji-2020-gui-hua/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="530" height="86" src="//music.163.com/outchain/player?type=2&id=416892296&auto=1&height=66"></iframe><hr><p>博客搭建了快半个月了吧，没有前端知识搞起来还是挺麻烦，有些东西要很久才能完全掌握，可能是我愚钝吧，不过在这里还是要感谢给我解答困惑的前辈，让我少走了许多弯路。<br><img src="1.jpg" alt></p><p>既然是个人博客，总该写点什么<br>首先，感谢屏幕前的你来到我的博客，想要写点什么可是脑子里没东西，就写点自我介绍还有对过去的总结以及未来规划吧</p><h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><hr><p>大一学生，重庆工商大学派斯学院 计算机科学与技术专业，没什么特长，资质平平，平凡得不能再平凡。</p><p>有谁甘做一个平凡的人呢？</p><p>我也想活的恣意潇洒，做自己喜欢的事，最近看了阎真写的《沧浪之水》、《活着之上》，方才明白我的这些想法不外乎幼稚而已。认清现实，选择自己的一条路走下去才是目前该做的事。<br>刚好今年第一天搭建成功自己的博客，对于我来说是一件很有成就感的事，用它来记录以后学习中一些不成熟的思考吧，也当做归纳笔记，帮助自己复习，能够与广大的互联网朋友们交流心得体会。</p><hr><h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h1><h2 id="上半年"><a href="#上半年" class="headerlink" title="上半年"></a>上半年</h2><p>经历一千多万人的高考上岸，有一部分原因是没发挥好，更多的原因是自己没努力吧，其实心中是很明白自己如果想过上更好的生活就要努力，但是往往做不到严于律己；要做的事情明日复明日，也就只剩下悲叹了。</p><p>高中在学习上只学自己喜欢的科目，英语烂的一塌糊涂，现在真正需要用到英语，连上个GitHub都要用Google翻译，书到用时方恨少。提高英语能力已经迫在眉睫，不能再这样下去了。</p><hr><h2 id="下半年"><a href="#下半年" class="headerlink" title="下半年"></a>下半年</h2><p>我的大学跟好的学校比起来确实差的太多，半年下来，我也更明白一个人的能力并不与他上哪个学校直接相关，感觉像是在安慰自己，，，所以给自己制定目标，自学是一个大学生最基本的能力，以此来弥补学校的差距吧</p><p>半学期下来，也没有什么记忆深刻的事情，就连这些也就是无病呻吟而已</p><p><strong>学习上：</strong></p><p>虽然学校不够好，硬件设施也比较老旧，但是上课的老师大多数是本部过来，算是个意外之喜吧。没有参加任何部门和社团，我不觉得这样没有意义，相反，我找不到参加的理由。</p><p>课程还是比较轻松，期末考试比想象中简单，目前还没学习专业课程，虽然是大学，但是每天还是稀里糊涂的忙着，不知道干了什么一天就过去了。希望下学期不会有这样的感受了，加油吧</p><p><strong>生活上：</strong></p><ul><li><strong><em>健身停止</em></strong></li></ul><p>高中健身接近两年，上了大学没有好像没有动力了，腹肌没有了胸肌还在，以前崇拜肌肉巨兽，现在手机里都看不到他们的照片了，心里没有健身的想法了，或许是大学生活把自己腐朽了吧。</p><ul><li><strong><em>学会滑板</em></strong></li></ul><p>因为滑板，认识了很多朋友，不论是校友还是校外的都能因为滑板聚在一起滑板，当做出一个新动作的时候换来的开心是其它事情无法代替的，有时候为了一个动作死磕几天或者一个月都会坚持下去……总之滑板带给我的是无拘无束的快乐还有不放弃的滑板精神！<br><img src="2.jpg" alt> </p><p>想起《我的少女时代》里的一句话，送给因为滑板遇见的一切：</p><blockquote><p>每人都有一颗林真心，遇见是最美好的小幸运，谢谢你出现在我的青春里。</p></blockquote><hr><h1 id="2020目标和规划"><a href="#2020目标和规划" class="headerlink" title="2020目标和规划"></a>2020目标和规划</h1><h2 id="生活上："><a href="#生活上：" class="headerlink" title="生活上："></a><strong>生活上：</strong></h2><p>两个心愿：</p><ul><li>云南旅行</li><li>明年暑假骑自行车回家<br><img src="3.jpg" alt></li></ul><hr><h2 id="学习上："><a href="#学习上：" class="headerlink" title="学习上："></a><strong>学习上：</strong></h2><p>目前还没找到自己的方向，但我挺喜欢操作系统这块的，准备深入学习。另外，准备明年参加ACM，或许有点晚，先开始再说。</p><p>阿城《棋王》里有这样一句话:</p><blockquote><p>天地广阔，有所作为</p></blockquote><p>1024+996=2020，2020注定是不平凡的一年，定下目标，努力实现。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a><strong><em>目标</em></strong></h2><ul><li><p>准备ACM</p></li><li><p>寒假学完c++</p></li><li><p>寒假出一篇博客搭建教程</p></li><li><p>提高英语水平</p></li><li><p>坚持写博客<br><img src="4.jpg" alt></p></li></ul><h2 id="计划要看的专业书籍"><a href="#计划要看的专业书籍" class="headerlink" title="计划要看的专业书籍"></a><strong><em>计划要看的专业书籍</em></strong></h2><ul><li><p>《数据结构与算法》</p></li><li><p>《操作系统真象还原》</p></li><li><p>《从实模式到保护模式》</p></li><li><p>《现代操作系统》</p></li><li><p>《汇编语言》</p></li><li><p>《linux内核完全剖析》</p></li><li><p>《c++ primer plus》</p></li></ul><p>最后:</p><blockquote><p>业精于勤，荒于嬉；行成于思，毁于随。</p></blockquote><p>自勉。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
